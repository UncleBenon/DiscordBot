from playwright.async_api import async_playwright
from asyncio import run, sleep
from random import choice

LANGUAGES = [
    "Abkhaz",
    "Acehnese",
    "Acholi",
    "Afar",
    "Afrikaans",
    "Albanian",
    "Alur",
    "Amharic",
    "Arabic",
    "Armenian",
    "Assamese",
    "Avar",
    "Awadhi",
    "Aymara",
    "Azerbaijani",
    "Balinese",
    "Baluchi",
    "Bambara",
    "Baoulé",
    "Bashkir",
    "Basque",
    "Batak Karo",
    "Batak Simalungun",
    "Batak Toba",
    "Belarusian",
    "Bemba",
    "Bengali",
    "Betawi",
    "Bhojpuri",
    "Bikol",
    "Bosnian",
    "Breton",
    "Bulgarian",
    "Buryat",
    "Cantonese",
    "Catalan",
    "Cebuano",
    "Chamorro",
    "Chechen",
    "Chichewa",
    "Chinese (Simplified)",
    "Chinese (Traditional)",
    "Chuukese",
    "Chuvash",
    "Corsican",
    "Crimean Tatar (Cyrillic)",
    "Crimean Tatar (Latin)",
    "Croatian",
    "Czech",
    "Danish",
    "Dari",
    "Dhivehi",
    "Dinka",
    "Dogri",
    "Dombe",
    "Dutch",
    "Dyula",
    "Dzongkha",
    "English",
    "Esperanto",
    "Estonian",
    "Ewe",
    "Faroese",
    "Fijian",
    "Filipino",
    "Finnish",
    "Fon",
    "French",
    "French (Canada)",
    "Frisian",
    "Friulian",
    "Fulani",
    "Ga",
    "Galician",
    "Georgian",
    "German",
    "Greek",
    "Guarani",
    "Gujarati",
    "Haitian Creole",
    "Hakha Chin",
    "Hausa",
    "Hawaiian",
    "Hebrew",
    "Hiligaynon",
    "Hindi",
    "Hmong",
    "Hungarian",
    "Hunsrik",
    "Iban",
    "Icelandic",
    "Igbo",
    "Ilocano",
    "Indonesian",
    "Inuktut (Latin)",
    "Inuktut (Syllabics)",
    "Irish",
    "Italian",
    "Jamaican Patois",
    "Japanese",
    "Javanese",
    "Jingpo",
    "Kalaallisut",
    "Kannada",
    "Kanuri",
    "Kapampangan",
    "Kazakh",
    "Khasi",
    "Khmer",
    "Kiga",
    "Kikongo",
    "Kinyarwanda",
    "Kituba",
    "Kokborok",
    "Komi",
    "Konkani",
    "Korean",
    "Krio",
    "Kurdish (Kurmanji)",
    "Kurdish (Sorani)",
    "Kyrgyz",
    "Lao",
    "Latgalian",
    "Latin",
    "Latvian",
    "Ligurian",
    "Limburgish",
    "Lingala",
    "Lithuanian",
    "Lombard",
    "Luganda",
    "Luo",
    "Luxembourgish",
    "Macedonian",
    "Madurese",
    "Maithili",
    "Makassar",
    "Malagasy",
    "Malay",
    "Malay (Jawi)",
    "Malayalam",
    "Maltese",
    "Mam",
    "Manx",
    "Maori",
    "Marathi",
    "Marshallese",
    "Marwadi",
    "Mauritian Creole",
    "Meadow Mari",
    "Meiteilon (Manipuri)",
    "Minang",
    "Mizo",
    "Mongolian",
    "Myanmar (Burmese)",
    "Nahuatl (Eastern Huasteca)",
    "Ndau",
    "Ndebele (South)",
    "Nepalbhasa (Newari)",
    "Nepali",
    "NKo",
    "Norwegian",
    "Nuer",
    "Occitan",
    "Odia (Oriya)",
    "Oromo",
    "Ossetian",
    "Pangasinan",
    "Papiamento",
    "Pashto",
    "Persian",
    "Polish",
    "Portuguese (Brazil)",
    "history",
    "Portuguese (Portugal)",
    "Punjabi (Gurmukhi)",
    "Punjabi (Shahmukhi)",
    "Quechua",
    "Qʼeqchiʼ",
    "Romani",
    "Romanian",
    "Rundi",
    "Russian",
    "Sami (North)",
    "Samoan",
    "Sango",
    "Sanskrit",
    "Santali (Latin)",
    "Santali (Ol Chiki)",
    "Scots Gaelic",
    "Sepedi",
    "Serbian",
    "Sesotho",
    "Seychellois Creole",
    "Shan",
    "Shona",
    "Sicilian",
    "Silesian",
    "Sindhi",
    "Sinhala",
    "Slovak",
    "Slovenian",
    "Somali",
    "Spanish",
    "Sundanese",
    "Susu",
    "Swahili",
    "Swati",
    "Swedish",
    "Tahitian",
    "Tajik",
    "Tamazight",
    "Tamazight (Tifinagh)",
    "Tamil",
    "Tatar",
    "Telugu",
    "Tetum",
    "Thai",
    "Tibetan",
    "Tigrinya",
    "Tiv",
    "Tok Pisin",
    "Tongan",
    "Tshiluba",
    "Tsonga",
    "Tswana",
    "Tulu",
    "Tumbuka",
    "Turkish",
    "Turkmen",
    "Tuvan",
    "Twi",
    "Udmurt",
    "Ukrainian",
    "Urdu",
    "Uyghur",
    "Uzbek",
    "Venda",
    "Venetian",
    "Vietnamese",
    "Waray",
    "Welsh",
    "Wolof",
    "Xhosa",
    "Yakut",
    "Yiddish",
    "Yoruba",
    "Yucatec Maya",
    "Zapotec",
    "Zulu",
]

async def badTranslateFunction(inputString: str, times: int = 10, DEBUG: bool = False) -> str:
    async with async_playwright() as p:
        driver = await p.firefox.launch(headless=not DEBUG)
        page = await driver.new_page()
        await page.goto("https://translate.google.com/")
        await page.get_by_role("button", name="Reject all").click()
        translation = page.locator("span .ryNqvb")
        swap = page.get_by_role("main").locator("span").filter(has_text="swap_horiz")
        await page.get_by_label("Source text", exact=True).fill(inputString)
        await sleep(1)

        foundLang = []

        for lang in LANGUAGES:
            foundLang.append(
                page.get_by_role("option", name=lang).locator("div").nth(1)
            )

        for _ in range(times):
            await page.get_by_role("button", name="More target languages").click()
            await sleep(1)
            found = choice(foundLang)
            await found.click()
            await sleep(5)
            await swap.click()
            await sleep(2)

        await page.get_by_role("button", name="More target languages").click()
        await page.get_by_role("option", name="English").locator("div").nth(1).click()

        await sleep(10)

        out = ""
        for line in await translation.all_inner_texts():
            out += f"{line} "
        return out


if __name__ == "__main__":
    lines = [
        "Hoi ik ben kees en ik houd heel veel van vlees!",
        "Hoi ik ben Jan en ik kan er wat van!",
        "My name is boogie2988 and dale has hurt my feelings!",
    ]

    print(run(badTranslateFunction(choice(lines))))
